SHELL:

    -> How do I save terminal output to a file?
            || visible in terminal ||   visible in file   || existing
    Syntax  ||  StdOut  |  StdErr  ||  StdOut  |  StdErr  ||   file   
  ==========++==========+==========++==========+==========++===========
      >     ||    no    |   yes    ||   yes    |    no    || overwrite
      >>    ||    no    |   yes    ||   yes    |    no    ||  append
            ||          |          ||          |          ||
     2>     ||   yes    |    no    ||    no    |   yes    || overwrite
     2>>    ||   yes    |    no    ||    no    |   yes    ||  append
            ||          |          ||          |          ||
     &>     ||    no    |    no    ||   yes    |   yes    || overwrite
     &>>    ||    no    |    no    ||   yes    |   yes    ||  append
            ||          |          ||          |          ||
   | tee    ||   yes    |   yes    ||   yes    |    no    || overwrite
   | tee -a ||   yes    |   yes    ||   yes    |    no    ||  append
            ||          |          ||          |          ||
  |& tee    ||   yes    |   yes    ||   yes    |   yes    || overwrite
  |& tee -a ||   yes    |   yes    ||   yes    |   yes    ||  append



    -- Criar iso bootavel no OSX a partir de um CD/DVD:
    $ sudo umount /dev/disk1s0
    $ dd if=/dev/disk1s0 of=w7.iso

    -- Mudar local de arquivar screenshot OS X:
    defaults write com.apple.screencapture location ~/Desktop/screenCapture/
    killall SystemUIServer
    
    -- Arquivos ocultos OS X:
    defaults write com.apple.finder AppleShowAllFiles -bool true [false]

    -- Alias:
    alias NAME="comando"
    # some ls aliases
    alias ll='ls -ahlFtr'
    alias l='ls -lhFtr'

    -- procurar e excluir vários arquivos pela linha de comando:
    find ./ -name 'desktop.ini' -exec rm {} \;

    -- procurar arquivo por nome ou extensão:
    find ./ -name "desktop.ini"
    find ./ -name "*.ini"

    -- lista todos os diretorios e seu respectivo tamanho
    for dirs in $(ls --color=never -l | grep "^d" | awk '{print $9}'); do du -hs $dirs;done

    -- mostra o tamanho do diretorio
    du -lhs /path/to/folder
    -- tamanho geral do disco
    df -h

    -- links simbólicos para usar no terminal
    ┌── ln(1) link, ln -- make links
    │   ┌── Create a symbolic link.
    │   │                         ┌── the path to the intended symlink
    │   │                         │   can use . or ~ or other relative paths
    │   │                   ┌─────┴────────┐
    ln -s /path/to/original /path/to/symlink
          └───────┬───────┘
                  └── the path to the original file/folder
                      can use . or ~ or other relative paths
                  
    (Ubuntu)            
    copy the symbolic link to /usr/local/bin/ to execute from the terminal

    chflags hidden -> oculta arquivos
    chflags nohidden -> torna visível

    setxkbmap -model abnt2 -layout br   //ajusta teclado ubuntu
    
    ----> filtra essa alguma coisa pra tu
    history | grep 'alguma coisa' 
    
    ----> procura pela string em todos os arquivos recursivamemte
    grep -rin "platform-tools/adb" ./*
    grep -rnw '/path/to/somewhere/' -e "pattern"
    
    ----> procura com regex que possui quebra de linha
    pcregrep -Mrin "teste 1.*\n.*teste 3" ./
    
    ----> ajusta densidade genymotion
    vboxmanage guestproperty set Custom\ Tablet\ -\ 4.4.4\ -\ API\ 19\ -\ 2560x1600 "vbox_dpi" "233"

    -- muda dono e grupo dos aquivos da pasta
    sudo chown -R $USER:admin /usr/local/include

    --configurar layout do teclado
    sudo dpkg-reconfigure keyboard-configuration

    Grupos: /etc/group
    Adding a user to a group: sudo adduser user group
    Removing a user from a group: sudo deluser user group


GIT:
    /*
    * Ignora arquivos localmente assumindo que nunca houve mudança
    **/
    This will tell git you want to start ignoring the changes to the file
    git update-index --assume-unchanged path/to/file

    # When you want to start keeping track again
    git update-index --no-assume-unchanged path/to/file

    # helper para não ter que ficar digitando senha por https
    git config --global credential.helper osxkeychain

    # get all commits id
    git log --pretty="%H" > file.txt
    
    # commit part of file
        You can use git add --patch <filename> (or -p for short), and git will begin to break down your file into what it thinks are sensible "hunks" (portions of the file). It will then prompt you with this question:

        Stage this hunk [y,n,q,a,d,/,j,J,g,s,e,?]?
        Here is a description of each option:

        y stage this hunk for the next commit
        n do not stage this hunk for the next commit
        q quit; do not stage this hunk or any of the remaining hunks
        a stage this hunk and all later hunks in the file
        d do not stage this hunk or any of the later hunks in the file
        g select a hunk to go to
        / search for a hunk matching the given regex
        j leave this hunk undecided, see next undecided hunk
        J leave this hunk undecided, see next hunk
        k leave this hunk undecided, see previous undecided hunk
        K leave this hunk undecided, see previous hunk
        s split the current hunk into smaller hunks
        e manually edit the current hunk
        ? print hunk help
        If the file is not in the repository yet, you can first do git add -N <filename>. Afterwards you can go on with git add -p <filename>.
        
JAVA:
    --escolher qual java será utilizado no ubuntu
    sudo update-alternatives --config java
    

